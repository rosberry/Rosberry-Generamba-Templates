{% include 'header' %}

import CollectionViewTools

final class {{ module_info.name }}CellItem: CollectionViewDiffableCellItem {

    private typealias Cell = {{ module_info.name }}Cell

    lazy var identifier: String = ""
    let reuseType: ReuseType = .class(Cell.self)

    func configure(_ cell: UICollectionViewCell) {
        guard let cell = cell as? Cell else {
            return
        }

        cell.setNeedsLayout()
        cell.layoutIfNeeded()
    }

    func size(in collectionView: UICollectionView, sectionItem: CollectionViewSectionItem) -> CGSize {
        return CGSize(width: collectionView.bounds.width, height: 50)
    }

    func equal(to item: CollectionViewDiffableItem) -> Bool {
        guard let rhs = item as? {{ module_info.name }}CellItem else {
            return false
        }
        return true
    }
}
