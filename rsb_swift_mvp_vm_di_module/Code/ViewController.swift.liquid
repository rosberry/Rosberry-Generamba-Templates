{% include 'header' %}

import UIKit
import Core

protocol {{ prefix }}{{ module_info.name }}ViewInput: class {

    func update(with viewModel: {{ prefix }}{{ module_info.name }}ViewModel, animated: Bool)
}

protocol {{ prefix }}{{ module_info.name }}ViewOutput: class {

    func viewDidLoad()
}

final class {{ prefix }}{{ module_info.name }}ViewController: UIViewController {

    var needsUpdate: Bool = true

    private var viewModel: {{ prefix }}{{ module_info.name }}ViewModel
    private let output: {{ prefix }}{{ module_info.name }}ViewOutput

    // MARK: - Lifecycle

    init(viewModel: {{ prefix }}{{ module_info.name }}ViewModel, output: {{ prefix }}{{ module_info.name }}ViewOutput) {
        self.viewModel = viewModel
        self.output = output
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewDidLoad()
    }

    // MARK: - Layout

    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
    }
}

// MARK: - {{ prefix }}{{ module_info.name }}ViewInput

extension {{ prefix }}{{ module_info.name }}ViewController: {{ prefix }}{{ module_info.name }}ViewInput, ViewUpdatable {

    func update(with viewModel: {{ prefix }}{{ module_info.name }}ViewModel, animated: Bool) {
        let oldViewModel = self.viewModel
        self.viewModel = viewModel

        // update view

        needsUpdate = false
    }
}
