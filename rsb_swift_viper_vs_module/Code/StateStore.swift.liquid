{% include 'header' %}

enum {{ prefix }}{{ module_info.name }}ViewState: ViewState {
    case idle
}

final class {{ prefix }}{{ module_info.name }}StateStore: StateStore<{{ prefix }}{{ module_info.name }}ViewState> {

    private var _state: {{ prefix }}{{ module_info.name }}ViewState = .idle
    override var state: {{ prefix }}{{ module_info.name }}ViewState {
        get {
            return _state
        }
        set(newState) {
            guard newState != _state else {
                assertionFailure("Skip rendering with the same state: \(newState.logDescription)")
                return
            }
            _state = newState
            // Set stored properties here accoring to state associated values
            delegate?.stateDidChange()
        }
    }

    init() {
        // Set stored properties here using initialization arguments
        super.init(initialState: _state)
    }
}
